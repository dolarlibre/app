service:
  name: daily-wallet-api
  awsKmsKeyArn: "arn:aws:kms:us-east-1:947598263436:key/bb08c235-5160-4745-bc4e-9c37aa991255"

plugins:
  - serverless-plugin-include-dependencies

package:
  excludeDevDependencies: false
  exclude:
    - test/**
    - jobs/**
    - addresses/**
    - node_modules/**

custom:
  myStage: ${opt:stage, self:provider.stage}
  myEnvironment:
    ORIGIN:
      prod: "*"
      dev: "*"
    OMI_ADDRESS:
      prod: ""
      dev: "0x962E624dCfA8CfB220015A5292C15d4006c42a85"
    APP_URL:
      prod: ""
      dev: "https://quirky-davinci-4da258.netlify.com/"
    OMI_PK:
      prod: ""
      dev: "AQICAHj9VHz1y9MMZLBS9T+EozoW8IrZNrawGIGC2VxP6G+V1AF4IAURHxO4tQqSscFWCZTgAAAApDCBoQYJKoZIhvcNAQcGoIGTMIGQAgEAMIGKBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEvQtg7MUYnbKgB/eQIBEIBdbh6vWnme7DK6phlQEIXAMcSNKxSIECqTInGE67VhPt93qLNEuMNpqLze0Vb23e2dj7a8Qym5YiWJBOfcLALNyAk41i9FMabdWKT8UZ1oXWZuhb2gvycOP1ERi1S/"

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: dev
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    DYNAMODB_ACCOUNT_TABLE: ${self:service}-accounts-${opt:stage, self:provider.stage}
    ORIGIN: ${self:custom.myEnvironment.ORIGIN.${self:custom.myStage}}
    OMI_ADDRESS: ${self:custom.myEnvironment.OMI_ADDRESS.${self:custom.myStage}}
    APP_URL: ${self:custom.myEnvironment.APP_URL.${self:custom.myStage}}
    OMI_PK: ${self:custom.myEnvironment.OMI_PK.${self:custom.myStage}}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_ACCOUNT_TABLE}"

functions:
  signup:
    handler: links/signup.signup
    events:
      - http:
          path: links/signup
          method: post
          cors: true
  get:
    handler: links/get.get
    events:
      - http:
          path: links/get/{linkId}
          method: get
          cors: true

  redeem:
    handler: links/redeem.redeem
    events:
      - http:
          path: links/redeem
          method: put
          cors: true
  send:
    handler: links/send.send
    events:
      - http:
          path: links/send
          method: post
          cors: true

resources:
  Resources:
    LinkDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: linkId
            AttributeType: S
        KeySchema:
          - AttributeName: linkId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    AccountDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: accountAddress
            AttributeType: S
        KeySchema:
          - AttributeName: accountAddress
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_ACCOUNT_TABLE}
